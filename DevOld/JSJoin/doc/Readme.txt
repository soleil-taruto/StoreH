======
JSJoin
======

----
コマンド

JSJoin.exe [/R] ソースファイル-DIR リソース-DIR 出力-DIR

	/R ... リリースモード


★注意

	出力-DIR の中身は実行時にクリア(全て削除)されます。


----
固有の命令

	@@
		ファイル毎にユニークな識別子に置き換えます。
		ファイル内では同じ識別子になります。
		変換例：_P_123_

	LOGPOS();

		ログ出力
		変換書式：console.log("ファイル名 (行番号)");
		インデントを除き行頭でなければなりません。

	error();

		エラー停止
		変換書式：throw "ファイル名 (行番号)";
		インデントを除き行頭でなければなりません。

	/// 定義名

		定義名をタグファイルに追加する。
		定義名は任意の文字列
		インデントを除き行頭でなければなりません。

	@(ASTR)

		半角アスタリクスに置き換えます。

	@(AUTO)

		連番に置き換えます。(この場所にしか存在しない値(正整数)を生成する)
		変換例：13

	@(UNQN)

		ユニークな識別子に置き換えます。(この場所にしか存在しない文字列を生成する)
		変換例：A_12345678901234567890_12345678901234567890_Z

	@(UUID)

		UUID-に置き換えます。(この場所にしか存在しない文字列を生成する)
		変換例：{4fb7ed89-36c8-4e82-8a1e-a689fc535bd1}

	@(INIT)

		_INIT で終わるメソッド名のカンマ区切りリストに置き換えます。(大文字であること。_Init や _init はヒットしない)
		変換例：Miso_INIT, Sio_INIT, Shoyu_INIT
		並びは ( 1. ソースオーダー, 2. 定義順 ) になります。

	@(EACH)

		_EACH で終わるメソッド名のカンマ区切りリストに置き換えます。(大文字であること。_Each や _each はヒットしない)
		変換例：Miso_EACH, Sio_EACH, Shoyu_EACH
		並びは ( 1. ソースオーダー, 2. 定義順 ) になります。

	@(CRDT)

		クレジット情報に置き換えます。
		クレジット情報：リソース-DIR 配下の _source.txt の１行目・２行目の並びを連結した文字列配列
		変換例："Creator-A", "http://example.com/aaa", "Creator-B", "http://example.com/bbb"
		並びは ( 1. クリエーターの文字コード順 ) になります。

	@(APID)

		アプリ固有の識別子に置き換えます。
		ソースファイル-DIR の SHA-512_128 を元に生成します。
		変換例：APP_123456789ABCDEF123456789ABCDEF_ID

	@(SRCN)

		ソースファイル固有の値(正整数)に置き換えます。
		変換例：17


----
補足

ソースファイル-DIR 直下に tags を出力する。

ソースファイル-DIR 配下の '_' で始まるローカル名をパスに含まない
拡張子が ".js" であるファイルをソースファイルとして処理する。

リソース-DIR 配下の '_' で始まるローカル名をパスに含まない
全てのファイルをリソースファイルとして処理する。


----
秀丸設定memo

ファイルタイプ別の設定 / その他 / 単語補完

	自動表示 [レ]
	表示方法 : リスト
	現在編集中のテキスト [レ]
	辞書ファイル [　]

	単語補完の検索対象 / 詳細

		[○] 行単位
		[レ] tagsファイル
		[　] ファイル名

動作環境 / その他のコマンド / タグジャンプ / 上の階層もチェックする [レ]

